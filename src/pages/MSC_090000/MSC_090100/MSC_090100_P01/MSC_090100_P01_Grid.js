import { RowState, ValueType } from "realgrid";
import newIcon from "assets/imgs/ic_new.png";

export const fields = [
  { fieldName: "sex_dvsn_cd", dataType: ValueType.TEXT },
  { fieldName: "rfvl_age_clsf_cd", dataType: ValueType.TEXT },
  { fieldName: "lwlm_rang_age", dataType: ValueType.INT },
  { fieldName: "age_lwlm_rang_type_cd", dataType: ValueType.TEXT },
  { fieldName: "uplm_rang_age", dataType: ValueType.INT },
  { fieldName: "age_uplm_rang_type_cd", dataType: ValueType.TEXT },
  { fieldName: "rfvl_lwlm_valu", dataType: ValueType.NUMBER },
  { fieldName: "rfvl_lwlm_rang_type_cd", dataType: ValueType.TEXT },
  { fieldName: "rfvl_uplm_valu", dataType: ValueType.NUMBER },
  { fieldName: "rfvl_uplm_rang_type_cd", dataType: ValueType.TEXT },
  { fieldName: "rfvl_rmrk", dataType: ValueType.TEXT },
  { fieldName: "strt_date", dataType: ValueType.DATE },
  { fieldName: "end_date", dataType: ValueType.DATE },
  { fieldName: "rfvl_dvsn_cd", dataType: ValueType.TEXT },
  { fieldName: "inpt_sqno", dataType: ValueType.INT },
  { fieldName: "origin_strt_date", dataType: ValueType.TEXT },
];

export const columns = [
  {
    header: "성별",
    name: "sex_dvsn_cd",
    fieldName: "sex_dvsn_cd",
    width: 30,
    placeHolder: "선택",
    editButtonVisibility: "always",
    lookupDisplay: true,
    styleCallback: (grid, cell) => {
      const ret = {};
      if (grid.getDataSource().getRowState(grid.getDataRow(cell.index.itemIndex)) === RowState.CREATED) {
        ret.renderer = {
          type: "icon",
          iconCallback: () => newIcon,
          iconHeight: 18,
          iconWidth: 18,
          iconLocation: "leftedge",
        };
      }
      return ret;
    },
  },
  {
    header: "연령 단위",
    name: "rfvl_age_clsf_cd",
    fieldName: "rfvl_age_clsf_cd",
    width: 30,
    placeHolder: "선택",
    editButtonVisibility: "always",
    lookupDisplay: true,
  },
  {
    header: "나이 하한치",
    name: "lwlm_rang_age",
    fieldName: "lwlm_rang_age",
    width: 30,
    placeHolder: "ex) 0",
    editor: {
      type: "number",
      positiveOnly: true,
      integerOnly: true,
      textReadOnly: false,
    },
  },
  {
    header: "하한치 기준",
    name: "age_lwlm_rang_type_cd",
    fieldName: "age_lwlm_rang_type_cd",
    width: 30,
    placeHolder: "선택",
    editButtonVisibility: "always",
    lookupDisplay: true,
  },
  {
    header: "나이 상한치",
    name: "uplm_rang_age",
    fieldName: "uplm_rang_age",
    width: 30,
    placeHolder: "ex) 999",
    editor: {
      type: "number",
      positiveOnly: true,
      integerOnly: true,
      textReadOnly: false,
    },
  },
  {
    header: "상한치 기준",
    name: "age_uplm_rang_type_cd",
    fieldName: "age_uplm_rang_type_cd",
    width: 30,
    placeHolder: "선택",
    editButtonVisibility: "always",
    lookupDisplay: true,
  },
  {
    header: "하한치",
    name: "rfvl_lwlm_valu",
    fieldName: "rfvl_lwlm_valu",
    width: 30,
    placeHolder: "ex) 0",
    numberFormat: "###,##0.#####",
    editor: {
      type: "number",
      textReadOnly: false,
      editFormat: "###,##0.#####",
      maxIntegerLength: 6,
      maxLengthExceptComma: true,
      maxLength: 7,
    },
  },
  {
    header: "하한치 기준",
    name: "rfvl_lwlm_rang_type_cd",
    fieldName: "rfvl_lwlm_rang_type_cd",
    width: 30,
    placeHolder: "선택",
    editButtonVisibility: "always",
    lookupDisplay: true,
  },
  {
    header: "상한치",
    name: "rfvl_uplm_valu",
    fieldName: "rfvl_uplm_valu",
    width: 30,
    placeHolder: "ex) 999",
    numberFormat: "###,##0.#####",
    editor: {
      type: "number",
      textReadOnly: false,
      editFormat: "###,##0.#####",
      maxIntegerLength: 6,
      maxLengthExceptComma: true,
      maxLength: 7,
    },
  },
  {
    header: "상한치 기준",
    name: "rfvl_uplm_rang_type_cd",
    fieldName: "rfvl_uplm_rang_type_cd",
    width: 30,
    placeHolder: "선택",
    editButtonVisibility: "always",
    lookupDisplay: true,
  },
  {
    header: "비고",
    name: "rfvl_rmrk",
    fieldName: "rfvl_rmrk",
    width: 140,
    placeHolder: "입력하세요.",
    styleName: "rg-left-column",
  },
  {
    header: "적용시작일",
    name: "strt_date",
    fieldName: "strt_date",
    width: 40,
    datetimeFormat: "yyyy-MM-dd",
    editButtonVisibility: "always",
    editor: {
      type: "date",
      commitOnSelect: true,
      dropDownWhenClick: true,
      showButtons: false,
      minDate: new Date(),
      maxDate: new Date("2999-12-31"),
      mask: { editMask: "9999-99-99", includedFormat: true },
      defaultShowDate: "todayWhenNull",
    },
  },
  {
    header: "적용종료일",
    name: "end_date",
    fieldName: "end_date",
    datetimeFormat: "yyyy-MM-dd",
    width: 40,
    editButtonVisibility: "always",
    editor: {
      type: "date",
      commitOnSelect: true,
      dropDownWhenClick: true,
      showButtons: false,
      minDate: new Date(),
      maxDate: new Date("2999-12-31"),
      mask: { editMask: "9999-99-99", includedFormat: true },
    },
  },
];
